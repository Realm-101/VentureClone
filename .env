
# =============================================================================
# MINIMAL VENTURE ANALYSIS - ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all environment variables needed for the minimal venture
# analysis application. Copy this file to .env and configure as needed.

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Node.js Environment
# Options: development, production
NODE_ENV=development

# Server Port
# The port the Express server will listen on
# Default: 5000 (required for deployment environments)
PORT=5000

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
# The application supports switchable storage backends for flexibility

# Storage Backend Selection
# STORAGE=mem (default) - Use in-memory storage for immediate deployment
#   - Fast and simple, no database setup required
#   - Data is lost when server restarts
#   - Perfect for development and quick deployments
# STORAGE=db - Use database storage for persistence
#   - Requires DATABASE_URL to be configured
#   - Data persists across server restarts
#   - Required for production use
STORAGE=mem

# Database Connection (only required when STORAGE=db)
# PostgreSQL connection string for persistent storage
# Format: postgresql://username:password@host:port/database
# DATABASE_URL=postgresql://user:password@localhost:5432/venturesclone

# =============================================================================
# AI PROVIDER CONFIGURATION
# =============================================================================
# The application supports multiple AI providers with automatic fallback
# At least one API key is required for business analysis functionality

# Google Gemini API (Primary Provider)
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=AIzaSyBKozEVc4c-Td0tlPWTe1RtP8K5AZC_nRs

# OpenAI API (Fallback Provider)
# Get your API key from: https://platform.openai.com/api-keys
# OPENAI_API_KEY=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

# XAI/Grok API (Alternative Provider)
# Get your API key from: https://console.x.ai/
GROK_API_KEY=xai-GSeEmlsM4cLyyO8o6vOCkbohmkMX9iJIC4RNIoSnFMxIMU5BYEER6Mu7FOyjiKu9aHkZzj0nc0FlEG45
# =============================================================================
# CLIENT CONFIGURATION
# =============================================================================

# API Base URL (for client-server communication)
# VITE_API_BASE=http://localhost:5000 (for development with different ports)
# VITE_API_BASE= (empty for same-origin requests in production)
# Leave empty for production deployments where client and server are on same origin

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Control which features are enabled to manage bundle size and complexity

# Experimental Features Toggle
# VITE_ENABLE_EXTRAS=0 (default) - Minimal dashboard only
#   - Core URL analysis functionality
#   - Lightweight bundle size
#   - Fast loading times
#   - Recommended for production
# VITE_ENABLE_EXTRAS=1 - Enable experimental features
#   - Full dashboard with advanced features
#   - Analytics charts and visualizations
#   - AI assistant and batch analysis
#   - Larger bundle size
VITE_ENABLE_EXTRAS=0

# =============================================================================
# QUICK START GUIDE
# =============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Set at least one AI provider API key (GEMINI_API_KEY or OPENAI_API_KEY)
# 3. For development: Keep STORAGE=mem and NODE_ENV=development
# 4. For production: Set STORAGE=db and configure DATABASE_URL
# 5. Run: npm run dev (development) or npm run build && npm start (production)
